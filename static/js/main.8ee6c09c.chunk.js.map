{"version":3,"sources":["firebase/config.js","context/modeContext.js","hooks/useMode.js","components/AssignmentCard.js","pages/home/Home.js","pages/create/Create.js","pages/search/Search.js","pages/assignment/Assignment.js","components/SearchBar.js","asset/mode.svg","components/Navbar.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","project","firestore","ModeContext","createContext","modeReducer","state","action","type","mode","payload","ModeContextProvider","children","useReducer","dispatch","Provider","value","changeMode","useMode","context","useContext","undefined","Error","AssignmentCard","assignment","deleteHandle","id","a","collection","doc","delete","length","className","map","task","title","onClick","time","details","substring","to","Home","useState","data","setData","isPending","setIsPending","error","setError","useEffect","unsub","onSnapshot","snapshot","empty","results","docs","forEach","push","err","message","Create","setTitle","setDetails","setTime","history","useHistory","handleSubmit","e","preventDefault","add","console","log","onSubmit","required","onChange","target","Search","queryString","useLocation","search","query","URLSearchParams","get","finalArray","filter","includes","entry","Assignment","useParams","result","at","Searchbar","term","setTerm","htmlFor","NavBar","src","modeIcon","alt","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ee6c09c.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCTzoSd6CWwCSp10ahpFs1KkCnfaLwjUJA\",\r\n  authDomain: \"assignment-tracker-7048a.firebaseapp.com\",\r\n  projectId: \"assignment-tracker-7048a\",\r\n  storageBucket: \"assignment-tracker-7048a.appspot.com\",\r\n  messagingSenderId: \"439558575065\",\r\n  appId: \"1:439558575065:web:7d92424cfae3b5b65a7fc8\"\r\n};\r\n\r\n// init firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst project = firebase.firestore()\r\n\r\nexport {project}\r\n\r\n","import { createContext, useReducer} from \"react\";\r\n\r\nexport const ModeContext = createContext();\r\n\r\nconst modeReducer = (state, action) => {\r\n    if(action.type===\"CHANGE_MODE\"){\r\n        return {...state, mode: action.payload}\r\n    }\r\n    else{\r\n        return state \r\n    }\r\n}\r\n\r\nexport function ModeContextProvider({children}){\r\n    //dispatch triggers the reducer function with two parameters state and action of which state is the existing state and action is the object put as parameter to dispatch \r\n    const [state, dispatch] = useReducer(modeReducer, {\r\n        mode: 'white' \r\n    })\r\n\r\n    const changeMode = (mode) => {\r\n        dispatch({type: \"CHANGE_MODE\", payload: mode})\r\n    }\r\n\r\n    return (\r\n        <ModeContext.Provider value={{...state, changeMode}}>\r\n            {children}\r\n        </ModeContext.Provider>\r\n    )\r\n}","import { useContext } from \"react\";\r\nimport { ModeContext } from \"../context/modeContext\";\r\n\r\nexport const useMode = () => {\r\n    const context= useContext(ModeContext)\r\n\r\n    //altho we wrapped entire app with context provider but we still make sure that the context is used within scope of the provider's wrap \r\n\r\n    if(context === undefined){\r\n        throw new Error(\"out of scope of the ModeContextProvider\")\r\n    }\r\n\r\n    //context will basically return the value object defined in the context file \r\n    return context \r\n}","import { Link } from \"react-router-dom\";\r\nimport { useMode } from \"../hooks/useMode\";\r\nimport { project } from \"../firebase/config\";\r\n\r\n// styles\r\nimport \"./AssignmentCard.css\";\r\n\r\nexport default function AssignmentCard({ assignment }) {\r\n  const {mode} = useMode()\r\n\r\n  const deleteHandle = async (id) => {\r\n    project.collection('assignments').doc(id).delete()\r\n  };\r\n\r\n  if(assignment.length===0){\r\n    return <div className=\"error\"> Nothing to show here</div>\r\n  }\r\n\r\n  return (\r\n    <div className={`assignment-card`}>\r\n      {assignment.map((task) => (\r\n        <div key={task.id} className={`card ${mode}`}>\r\n          <h3>{task.title}</h3>\r\n          <button className=\"delete-btn\" onClick={() => deleteHandle(task.id)}>\r\n            Delete\r\n          </button>\r\n          <p>{task.time} mins to complete.</p>\r\n          <div>{task.details.substring(0, 100)}...</div>\r\n          <Link to={`/assignments/${task.id}`}>Read details</Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { project } from \"../../firebase/config\";\r\nimport AssignmentCard from \"../../components/AssignmentCard\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// styles\r\nimport \"./Home.css\";\r\n\r\nexport default function Home() {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsPending(true)\r\n\r\n    const unsub = project.collection('assignments').onSnapshot(snapshot => {\r\n      if (snapshot.empty) {\r\n        setError('No assignment to load')\r\n        setIsPending(false)\r\n      } else {\r\n        let results = []\r\n        snapshot.docs.forEach(doc => {\r\n          // console.log(doc)\r\n          results.push({ ...doc.data(), id: doc.id })\r\n        })\r\n        setData(results)\r\n        setIsPending(false)\r\n      }\r\n    }, err => {\r\n      setError(err.message)\r\n      setIsPending(false)\r\n    })\r\n\r\n    return () => unsub()\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading...</p>}\r\n      {data && <AssignmentCard assignment={data} />}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\"\r\nimport \"./Create.css\"\r\nimport {useHistory} from 'react-router-dom'\r\nimport { project } from \"../../firebase/config\"\r\n\r\nexport default function Create() {\r\n    const [title, setTitle] = useState(\"\")\r\n    const [details, setDetails] = useState(\"\")\r\n    const [time, setTime] = useState(0)\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const doc = {title, details, time}\r\n        try{\r\n            await project.collection('assignments').add(doc)\r\n            history.push('/')\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <span>Assignment title</span>\r\n                    <input \r\n                    type=\"text\"\r\n                    required\r\n                    onChange={(e)=> setTitle(e.target.value)}\r\n                    value={title}\r\n                    > \r\n                    </input>\r\n                </label>\r\n                \r\n\r\n                <label>\r\n                    <span>Assignment Details</span>\r\n                    <textarea \r\n                    required\r\n                    onChange={(e)=> setDetails(e.target.value)}\r\n                    value={details}\r\n                    > \r\n                    </textarea>\r\n                </label>\r\n\r\n                <label>\r\n                    <span>Time</span>\r\n                    <input \r\n                    type=\"number\"\r\n                    required\r\n                    onChange={(e)=> setTime(e.target.value)}\r\n                    value={time}\r\n                    > \r\n                    </input>\r\n                </label>\r\n\r\n                <button>\r\n                    Submit\r\n                </button>\r\n            </form>    \r\n        </div>\r\n    )\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\nimport AssignmentCard from \"../../components/AssignmentCard\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { project } from \"../../firebase/config\";\r\n// styles\r\nimport \"./Search.css\";\r\n\r\nexport default function Search() {\r\n  //retrieving query from the url\r\n  const queryString = useLocation().search;\r\n  //sanitizing the string\r\n  const queryParams = new URLSearchParams(queryString);\r\n  const query = queryParams.get(\"q\");\r\n\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsPending(true);\r\n\r\n    const unsub = project.collection(\"assignments\").onSnapshot(\r\n      (snapshot) => {\r\n        if (snapshot.empty) {\r\n          setError(\"No assignment to load\");\r\n          setIsPending(false);\r\n        } else {\r\n          let result = {};\r\n          let finalArray = [];\r\n          result = snapshot.docs.filter((doc) =>\r\n            doc.data().title.includes(query)\r\n          );\r\n          result.forEach((entry) => {\r\n            finalArray.push({...entry.data(), id:entry.id});\r\n          });\r\n          console.log(finalArray);\r\n          setData(finalArray);\r\n          setIsPending(false);\r\n        }\r\n      },\r\n      (err) => {\r\n        setError(err.message);\r\n        setIsPending(false);\r\n      }\r\n    );\r\n\r\n    return () => unsub();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-title\">Assignment including \"{query}\"</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading...</p>}\r\n      {data && <AssignmentCard assignment={data} />}\r\n    </div>\r\n  );\r\n}\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useMode } from \"../../hooks/useMode\";\r\nimport { project } from \"../../firebase/config\";\r\nimport \"./Assignment.css\";\r\n\r\nexport default function Assignment() {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsPending(true);\r\n\r\n    const unsub = project.collection(\"assignments\").onSnapshot(\r\n      (snapshot) => {\r\n        if (snapshot.empty) {\r\n          setError(\"No assignment to load\");\r\n          setIsPending(false);\r\n        } else {\r\n          let result = {};\r\n          result = snapshot.docs.filter((doc) => doc.id === id);\r\n          setData(result.at(0).data());\r\n          setIsPending(false);\r\n        }\r\n      },\r\n      (err) => {\r\n        setError(err.message);\r\n        setIsPending(false);\r\n      }\r\n    );\r\n\r\n    return () => unsub();\r\n  }, [id]);\r\n\r\n  const { mode } = useMode();\r\n  return (\r\n    <div className={`assignment ${mode}`}>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {isPending && <div>Loading...</div>}\r\n      {data && (\r\n        <>\r\n          <h1 className=\"page-title\">{data.title}</h1>\r\n          <p> Time for the task {data.time}</p>\r\n          <p>{data.details}</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// styles\r\nimport './SearchBar.css'\r\n\r\nexport default function Searchbar() {\r\n  const [term, setTerm] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    history.push(`/search?q=${term}`)\r\n  }\r\n\r\n  return (\r\n    <div className=\"searchbar\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input \r\n          id=\"search\" \r\n          type=\"text\" \r\n          onChange={(e) => setTerm(e.target.value)} \r\n          required \r\n        />\r\n      </form>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/mode.fdb51e7c.svg\";","import { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nimport Searchbar from \"./SearchBar.js\";\r\nimport { useMode } from \"../hooks/useMode\";\r\nimport modeIcon from \"../asset/mode.svg\";\r\n\r\nexport default function NavBar() {\r\n  const { mode, changeMode } = useMode();\r\n\r\n  const toggleMode = () => {\r\n    mode === \"dark\" ? changeMode(\"white\") : changeMode(\"dark\");\r\n    //console.log(mode);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"navbar\">\r\n        <nav>\r\n          <Link to={\"/home\"} className=\"brand\">\r\n            <h1>Assignment Tracker</h1>\r\n          </Link>\r\n          <Searchbar />\r\n          <Link to={\"/create\"}>Create Assignment</Link>\r\n        </nav>\r\n      </div>\r\n      <div className=\"mode-div\">\r\n        <img src={modeIcon} alt=\"Mode Icon\" onClick={toggleMode}></img>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter, Route, Switch} from \"react-router-dom\"\r\n\r\n//styles \r\n\r\nimport './App.css'\r\n\r\n//pages \r\nimport Home from './pages/home/Home'\r\nimport Create from './pages/create/Create'\r\nimport Search from './pages/search/Search'\r\nimport Assignment from './pages/assignment/Assignment'\r\n\r\n//components \r\nimport NavBar from './components/Navbar'\r\n\r\n//hooks\r\nimport { useMode } from './hooks/useMode'\r\n\r\nfunction App() {\r\n  const {mode} = useMode();\r\n\r\n  return (\r\n    <div className={`App ${mode}`}>\r\n      <BrowserRouter>\r\n      <NavBar></NavBar>\r\n      <Switch>\r\n        <Route exact path={\"/\"}>\r\n          <Home></Home>\r\n        </Route>\r\n        <Route exact path={\"/assignment-tracker\"}>\r\n          <Home></Home>\r\n        </Route>\r\n        <Route path={\"/assignments/:id\"}>\r\n          <Assignment/>\r\n        </Route>\r\n        <Route path={\"/search\"}>\r\n          <Search></Search>\r\n        </Route>\r\n        <Route path={\"/create\"}>\r\n          <Create></Create>\r\n        </Route>\r\n        <Route path={\"/home\"}>\r\n          <Home></Home>\r\n        </Route>\r\n      </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ModeContextProvider} from './context/modeContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ModeContextProvider>\n      <App />\n    </ModeContextProvider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}